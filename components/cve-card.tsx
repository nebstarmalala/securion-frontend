"use client"

import Link from "next/link"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import type { CVE } from "@/lib/mock-data"
import { getSeverityColor } from "@/lib/mock-data"
import { ExternalLink, AlertTriangle } from "lucide-react"

interface CVECardProps {
  cve: CVE
}

export function CVECard({ cve }: CVECardProps) {
  const statusColors = {
    monitoring: "text-blue-600 bg-blue-50 border-blue-200 dark:text-blue-400 dark:bg-blue-950 dark:border-blue-900",
    affected: "text-red-600 bg-red-50 border-red-200 dark:text-red-400 dark:bg-red-950 dark:border-red-900",
    patched: "text-green-600 bg-green-50 border-green-200 dark:text-green-400 dark:bg-green-950 dark:border-green-900",
    "not-applicable":
      "text-gray-600 bg-gray-50 border-gray-200 dark:text-gray-400 dark:bg-gray-950 dark:border-gray-900",
  }

  return (
    <Card className="group transition-all hover:shadow-lg hover:scale-[1.02] hover:border-primary/50">
      <CardHeader>
        <div className="flex items-start justify-between gap-2">
          <div className="flex-1 space-y-1">
            <CardTitle className="text-lg font-mono group-hover:text-primary transition-colors">{cve.cveId}</CardTitle>
            <CardDescription className="text-xs">
              Published {new Date(cve.publishedDate).toLocaleDateString()}
            </CardDescription>
          </div>
          <div className="flex flex-col gap-2 items-end">
            <Badge variant="outline" className={getSeverityColor(cve.severity)}>
              {cve.cvss}
            </Badge>
            <Badge variant="outline" className={statusColors[cve.status]}>
              {cve.status}
            </Badge>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        <p className="text-sm text-muted-foreground line-clamp-3">{cve.description}</p>

        {cve.affectedProjects > 0 && (
          <div className="flex items-center gap-2 rounded-lg bg-destructive/10 border border-destructive/20 p-3">
            <AlertTriangle className="h-4 w-4 text-destructive shrink-0" />
            <span className="text-sm font-medium text-destructive">
              Affects {cve.affectedProjects} {cve.affectedProjects === 1 ? "project" : "projects"}
            </span>
          </div>
        )}

        <div className="flex items-center justify-between pt-2">
          <div className="flex flex-wrap gap-1">
            {cve.affectedProducts.slice(0, 2).map((product, index) => (
              <Badge key={index} variant="secondary" className="text-xs">
                {product.vendor} {product.product}
              </Badge>
            ))}
          </div>
          <Link href={`/cve-tracking/${cve.cveId}`}>
            <Button variant="ghost" size="sm" className="gap-2">
              View Details
              <ExternalLink className="h-3 w-3" />
            </Button>
          </Link>
        </div>
      </CardContent>
    </Card>
  )
}
