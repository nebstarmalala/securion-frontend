import { DashboardLayout } from "@/components/dashboard-layout"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
import { mockCVEs, getSeverityColor } from "@/lib/mock-data"
import { ArrowLeft, ExternalLink, Copy, AlertTriangle, CheckCircle2 } from "lucide-react"
import Link from "next/link"
import { notFound } from "next/navigation"

// Mock affected projects data
const affectedProjectsData = [
  {
    id: "1",
    projectName: "FinTech API Security Assessment",
    scopes: ["Main API Gateway", "Authentication Service"],
    service: "Apache Struts 2.5.28",
    status: "open" as const,
  },
  {
    id: "4",
    projectName: "Mobile Banking App Assessment",
    scopes: ["Backend API"],
    service: "Apache Struts 2.5.28",
    status: "in-progress" as const,
  },
]

export default function CVEDetailsPage({ params }: { params: { cveId: string } }) {
  const cve = mockCVEs.find((c) => c.cveId === params.cveId)

  if (!cve) {
    notFound()
  }

  const statusColors = {
    monitoring: "text-blue-600 bg-blue-50 border-blue-200 dark:text-blue-400 dark:bg-blue-950 dark:border-blue-900",
    affected: "text-red-600 bg-red-50 border-red-200 dark:text-red-400 dark:bg-red-950 dark:border-red-900",
    patched: "text-green-600 bg-green-50 border-green-200 dark:text-green-400 dark:bg-green-950 dark:border-green-900",
    "not-applicable":
      "text-gray-600 bg-gray-50 border-gray-200 dark:text-gray-400 dark:bg-gray-950 dark:border-gray-900",
  }

  return (
    <DashboardLayout breadcrumbs={[{ label: "CVE Tracking", href: "/cve-tracking" }, { label: cve.cveId }]}>
      <div className="space-y-6 animate-in fade-in duration-500">
        {/* Header */}
        <div className="flex items-start justify-between gap-4">
          <div className="space-y-1">
            <Link href="/cve-tracking">
              <Button variant="ghost" size="sm" className="gap-2 -ml-2 mb-2">
                <ArrowLeft className="h-4 w-4" />
                Back to CVE Tracking
              </Button>
            </Link>
            <div className="flex items-center gap-3 flex-wrap">
              <h1 className="text-3xl font-bold tracking-tight font-mono">{cve.cveId}</h1>
              <Badge variant="outline" className={getSeverityColor(cve.severity)}>
                CVSS {cve.cvss}
              </Badge>
              <Badge variant="outline" className={getSeverityColor(cve.severity)}>
                {cve.severity}
              </Badge>
              <Badge variant="outline" className={statusColors[cve.status]}>
                {cve.status}
              </Badge>
            </div>
          </div>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button>Mark as...</Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuItem>Monitoring</DropdownMenuItem>
              <DropdownMenuItem>Affected</DropdownMenuItem>
              <DropdownMenuItem>Patched</DropdownMenuItem>
              <DropdownMenuItem>Not Applicable</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>

        {/* Main Content Grid */}
        <div className="grid gap-6 lg:grid-cols-3">
          {/* Left Column - Details */}
          <div className="space-y-6 lg:col-span-2">
            {/* Description */}
            <Card>
              <CardHeader>
                <CardTitle>Description</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-sm leading-relaxed">{cve.description}</p>
              </CardContent>
            </Card>

            {/* CVSS Details */}
            <Card>
              <CardHeader>
                <CardTitle>CVSS Information</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid gap-4 sm:grid-cols-2">
                  <div>
                    <h3 className="text-sm font-medium text-muted-foreground mb-2">CVSS Score</h3>
                    <div className="flex items-center gap-2">
                      <span className="text-3xl font-bold">{cve.cvss}</span>
                      <Badge variant="outline" className={getSeverityColor(cve.severity)}>
                        {cve.severity}
                      </Badge>
                    </div>
                  </div>
                  <div>
                    <h3 className="text-sm font-medium text-muted-foreground mb-2">Vector String</h3>
                    <div className="flex items-center gap-2">
                      <code className="flex-1 rounded bg-muted px-3 py-2 text-xs font-mono break-all">
                        CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
                      </code>
                      <Button variant="ghost" size="icon" className="h-9 w-9 shrink-0">
                        <Copy className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>
                </div>
                <Separator />
                <div className="grid gap-3 sm:grid-cols-2">
                  <div className="space-y-1">
                    <p className="text-xs text-muted-foreground">Published Date</p>
                    <p className="text-sm font-medium">{new Date(cve.publishedDate).toLocaleDateString()}</p>
                  </div>
                  <div className="space-y-1">
                    <p className="text-xs text-muted-foreground">Last Modified</p>
                    <p className="text-sm font-medium">{new Date(cve.modifiedDate).toLocaleDateString()}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Affected Products */}
            <Card>
              <CardHeader>
                <CardTitle>Affected Products</CardTitle>
                <CardDescription>Software and versions impacted by this vulnerability</CardDescription>
              </CardHeader>
              <CardContent>
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>Vendor</TableHead>
                      <TableHead>Product</TableHead>
                      <TableHead>Version Range</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    {cve.affectedProducts.map((product, index) => (
                      <TableRow key={index}>
                        <TableCell className="font-medium">{product.vendor}</TableCell>
                        <TableCell>{product.product}</TableCell>
                        <TableCell>
                          <code className="text-xs font-mono bg-muted px-2 py-1 rounded">{product.versionRange}</code>
                        </TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </CardContent>
            </Card>

            {/* Impact on Projects */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  {cve.affectedProjects > 0 ? (
                    <AlertTriangle className="h-5 w-5 text-destructive" />
                  ) : (
                    <CheckCircle2 className="h-5 w-5 text-green-500" />
                  )}
                  Impact Assessment
                </CardTitle>
                <CardDescription>
                  {cve.affectedProjects > 0
                    ? `This CVE affects ${cve.affectedProjects} active ${cve.affectedProjects === 1 ? "project" : "projects"}`
                    : "This CVE does not affect any current projects"}
                </CardDescription>
              </CardHeader>
              <CardContent>
                {cve.affectedProjects > 0 ? (
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Project</TableHead>
                        <TableHead>Affected Scopes</TableHead>
                        <TableHead>Service/Version</TableHead>
                        <TableHead>Status</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {affectedProjectsData.map((project) => (
                        <TableRow key={project.id}>
                          <TableCell>
                            <Link
                              href={`/projects/${project.id}`}
                              className="font-medium hover:text-primary hover:underline"
                            >
                              {project.projectName}
                            </Link>
                          </TableCell>
                          <TableCell>
                            <div className="flex flex-wrap gap-1">
                              {project.scopes.map((scope, index) => (
                                <Badge key={index} variant="secondary" className="text-xs">
                                  {scope}
                                </Badge>
                              ))}
                            </div>
                          </TableCell>
                          <TableCell>
                            <code className="text-xs font-mono">{project.service}</code>
                          </TableCell>
                          <TableCell>
                            <Badge
                              variant="outline"
                              className={
                                project.status === "open"
                                  ? "text-red-600 bg-red-50 border-red-200 dark:text-red-400 dark:bg-red-950 dark:border-red-900"
                                  : "text-blue-600 bg-blue-50 border-blue-200 dark:text-blue-400 dark:bg-blue-950 dark:border-blue-900"
                              }
                            >
                              {project.status}
                            </Badge>
                          </TableCell>
                          <TableCell className="text-right">
                            <div className="flex justify-end gap-2">
                              <Button variant="outline" size="sm">
                                Create Finding
                              </Button>
                              <Button variant="ghost" size="sm">
                                Mark Patched
                              </Button>
                            </div>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                ) : (
                  <div className="flex flex-col items-center justify-center rounded-lg border border-dashed border-border p-8 text-center">
                    <CheckCircle2 className="h-12 w-12 text-green-500 mb-3" />
                    <p className="text-sm font-medium">No projects affected</p>
                    <p className="text-xs text-muted-foreground mt-1">
                      This CVE does not impact any of your current projects
                    </p>
                    <Button variant="outline" size="sm" className="mt-4 bg-transparent">
                      Monitor for Future Impact
                    </Button>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* References */}
            <Card>
              <CardHeader>
                <CardTitle>References</CardTitle>
                <CardDescription>External resources and documentation</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  {cve.references.map((ref, index) => (
                    <a
                      key={index}
                      href={ref}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-2 text-sm text-primary hover:underline"
                    >
                      <ExternalLink className="h-3.5 w-3.5 shrink-0" />
                      <span className="break-all">{ref}</span>
                    </a>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Right Column - Stats & Actions */}
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Quick Stats</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <span className="text-sm text-muted-foreground">Affected Projects</span>
                  <span className="text-2xl font-bold">{cve.affectedProjects}</span>
                </div>
                <Separator />
                <div className="flex items-center justify-between">
                  <span className="text-sm text-muted-foreground">Open Findings</span>
                  <span className="text-2xl font-bold">{cve.affectedProjects > 0 ? 2 : 0}</span>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Timeline</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex gap-3">
                    <div className="flex flex-col items-center">
                      <div className="h-2 w-2 rounded-full bg-primary" />
                      <div className="h-full w-px bg-border" />
                    </div>
                    <div className="flex-1 pb-4">
                      <p className="text-sm font-medium">Published</p>
                      <p className="text-xs text-muted-foreground">
                        {new Date(cve.publishedDate).toLocaleDateString()}
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-3">
                    <div className="flex flex-col items-center">
                      <div className="h-2 w-2 rounded-full bg-primary" />
                      <div className="h-full w-px bg-border" />
                    </div>
                    <div className="flex-1 pb-4">
                      <p className="text-sm font-medium">Last Modified</p>
                      <p className="text-xs text-muted-foreground">{new Date(cve.modifiedDate).toLocaleDateString()}</p>
                    </div>
                  </div>
                  <div className="flex gap-3">
                    <div className="flex flex-col items-center">
                      <div className="h-2 w-2 rounded-full bg-muted" />
                    </div>
                    <div className="flex-1">
                      <p className="text-sm font-medium">Status Changed</p>
                      <p className="text-xs text-muted-foreground">Marked as {cve.status}</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </DashboardLayout>
  )
}
